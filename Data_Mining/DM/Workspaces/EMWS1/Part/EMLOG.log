*------------------------------------------------------------*
User:                Vlad
Date:                18 March 2021
Time:                20:36:44
Site:                70115216
Platform:            X64_10PRO
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20:36:42" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                18 March 2021
Time:                20:36:42
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0WWZ60J "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0WWZ60J new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20:36:42" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Vlad";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70115216";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20:36:42" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Vlad";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
24267      proc freq data=EMWS1.Part_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Part_VariableSet noprint;
24268      table ROLE*LEVEL/out=WORK.PartMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.PartMETA;
24269      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.PART_VARIABLESET.
NOTE: The data set WORK.PARTMETA has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
24270      proc print data=WORK.PartMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.PartMETA label noobs;
24271      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
24272      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
24273      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
24274      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
24275      run;
 
NOTE: There were 6 observations read from the data set WORK.PARTMETA.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
24276      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1K661B7;
MPRINT(EM_DIAGRAM):   set WORK.M1K661B7;
MPRINT(EM_DIAGRAM):   where(PARTITIONROLE ne '' or ROLE='TARGET');
MPRINT(EM_DIAGRAM):   run;
trainPct=40 validatePct=30 testPct=30
NOTE: Data file DANE.OSOBY.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
24284      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24285      * Part: Retrieving stratification variable(s) levels;
MPRINT(EM_DIAGRAM):   * Part: Retrieving stratification variable(s) levels;
24286      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24287      proc freq data=EMWS1.Ids_DATA noprint;
NOTE: Data file DANE.OSOBY.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
MPRINT(EM_DIAGRAM):   proc freq data=EMWS1.Ids_DATA noprint;
24288      table
24289      komputer
24290      /out=WORK.Part_FREQ(drop=percent);
MPRINT(EM_DIAGRAM):   table komputer /out=WORK.Part_FREQ(drop=percent);
24291      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2000 observations read from the data set DANE.OSOBY.
NOTE: There were 2000 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK.PART_FREQ has 2 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
 
24292      proc sort data=WORK.Part_FREQ;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Part_FREQ;
24293      by descending count;
MPRINT(EM_DIAGRAM):   by descending count;
24294      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_FREQ.
NOTE: The data set WORK.PART_FREQ has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * Part: Retrieving levels that meet minimum requirement;
24295      * Part: Retrieving levels that meet minimum requirement;
24296      data WORK.Part_FREQ2(keep = count);
MPRINT(EM_DIAGRAM):   data WORK.Part_FREQ2(keep = count);
24297      set WORK.Part_FREQ;
MPRINT(EM_DIAGRAM):   set WORK.Part_FREQ;
24298      where (.01 * 40 * count) >= 3;
MPRINT(EM_DIAGRAM):   where (.01 * 40 * count) >= 3;
24299      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_FREQ.
      WHERE (0.4*count)>=3;
NOTE: The data set WORK.PART_FREQ2 has 2 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24300      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24301      * Part: Create stratified partitioning;
MPRINT(EM_DIAGRAM):   * Part: Create stratified partitioning;
24302      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24303      data
24304      EMWS1.Part_TRAIN(label="")
24305      EMWS1.Part_VALIDATE(label="")
24306      EMWS1.Part_TEST(label="")
24307      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_TRAIN(label="") EMWS1.PART_VALIDATE(label="") EMWS1.PART_TEST(label="") ;
24308      retain _seed_ 12345;
MPRINT(EM_DIAGRAM):   retain _seed_ 12345;
24309      drop _seed_ _genvalue_;
MPRINT(EM_DIAGRAM):   drop _seed_ _genvalue_;
24310      call ranuni(_seed_, _genvalue_);
MPRINT(EM_DIAGRAM):   call ranuni(_seed_, _genvalue_);
24311      label _dataobs_ = "%sysfunc(sasmsg(sashelp.dmine, sample_dataobs_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _dataobs_ = "Observation Number";
24312      _dataobs_ = _N_;
MPRINT(EM_DIAGRAM):   _dataobs_ = _N_;
24313      drop _c00:;
MPRINT(EM_DIAGRAM):   drop _c00:;
24314      set EMWS1.Ids_DATA;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA;
NOTE: Data file DANE.OSOBY.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
24315      if
24316      komputer = 1
24317      then do;
MPRINT(EM_DIAGRAM):   if komputer = 1 then do;
24318      if (1247+1-_C000004)*_genvalue_ <= (499 - _C000001) then do;
MPRINT(EM_DIAGRAM):   if (1247+1-_C000004)*_genvalue_ <= (499 - _C000001) then do;
24319      _C000001 + 1;
MPRINT(EM_DIAGRAM):   _C000001 + 1;
24320      output EMWS1.Part_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TRAIN;
24321      end;
MPRINT(EM_DIAGRAM):   end;
24322      else do;
MPRINT(EM_DIAGRAM):   else do;
24323      if (1247+1-_C000004)*_genvalue_ <= (499 - _C000001 + 374 - _C000002) then do;
MPRINT(EM_DIAGRAM):   if (1247+1-_C000004)*_genvalue_ <= (499 - _C000001 + 374 - _C000002) then do;
24324      _C000002 + 1;
MPRINT(EM_DIAGRAM):   _C000002 + 1;
24325      output EMWS1.Part_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_VALIDATE;
24326      end;
MPRINT(EM_DIAGRAM):   end;
24327      else do;
MPRINT(EM_DIAGRAM):   else do;
24328      _C000003 + 1;
MPRINT(EM_DIAGRAM):   _C000003 + 1;
24329      output EMWS1.Part_TEST;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TEST;
24330      end;
MPRINT(EM_DIAGRAM):   end;
24331      end;
MPRINT(EM_DIAGRAM):   end;
24332      _C000004+1;
MPRINT(EM_DIAGRAM):   _C000004+1;
24333      end;
MPRINT(EM_DIAGRAM):   end;
24334      else if
24335      komputer = 0
24336      then do;
MPRINT(EM_DIAGRAM):   else if komputer = 0 then do;
24337      if (753+1-_C000008)*_genvalue_ <= (301 - _C000005) then do;
MPRINT(EM_DIAGRAM):   if (753+1-_C000008)*_genvalue_ <= (301 - _C000005) then do;
24338      _C000005 + 1;
MPRINT(EM_DIAGRAM):   _C000005 + 1;
24339      output EMWS1.Part_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TRAIN;
24340      end;
MPRINT(EM_DIAGRAM):   end;
24341      else do;
MPRINT(EM_DIAGRAM):   else do;
24342      if (753+1-_C000008)*_genvalue_ <= (301 - _C000005 + 226 - _C000006) then do;
MPRINT(EM_DIAGRAM):   if (753+1-_C000008)*_genvalue_ <= (301 - _C000005 + 226 - _C000006) then do;
24343      _C000006 + 1;
MPRINT(EM_DIAGRAM):   _C000006 + 1;
24344      output EMWS1.Part_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_VALIDATE;
24345      end;
MPRINT(EM_DIAGRAM):   end;
24346      else do;
MPRINT(EM_DIAGRAM):   else do;
24347      _C000007 + 1;
MPRINT(EM_DIAGRAM):   _C000007 + 1;
24348      output EMWS1.Part_TEST;
MPRINT(EM_DIAGRAM):   output EMWS1.Part_TEST;
24349      end;
MPRINT(EM_DIAGRAM):   end;
24350      end;
MPRINT(EM_DIAGRAM):   end;
24351      _C000008+1;
MPRINT(EM_DIAGRAM):   _C000008+1;
24352      end;
MPRINT(EM_DIAGRAM):   end;
24353      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2000 observations read from the data set DANE.OSOBY.
NOTE: There were 2000 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set EMWS1.PART_TRAIN has 799 observations and 11 variables.
NOTE: The data set EMWS1.PART_VALIDATE has 600 observations and 11 variables.
NOTE: The data set EMWS1.PART_TEST has 601 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
24354      data _tempNobs;
MPRINT(EM_DIAGRAM):    data _tempNobs;
24355      length Type $8 Table $32 Nobs 8;
MPRINT(EM_DIAGRAM):   length Type $8 Table $32 Nobs 8;
24356      label type= "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,    NOQUOTE))" table = "%sysfunc(sasmsg(sashelp.dmine, meta_dataset_vlabel, NOQUOTE))" nobs = "%sysfunc(sasmsg(sashelp.dmine,  rpt_numObs_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label type= "Type" table = "Data Set" nobs = "Number of Observations";
24357      type='DATA';
MPRINT(EM_DIAGRAM):   type='DATA';
24358      table="EMWS1.Ids_DATA";
MPRINT(EM_DIAGRAM):   table="EMWS1.Ids_DATA";
24359      Nobs=2000;
MPRINT(EM_DIAGRAM):   Nobs=2000;
24360      output;
MPRINT(EM_DIAGRAM):   output;
24361      type='TRAIN';
MPRINT(EM_DIAGRAM):   type='TRAIN';
24362      table="EMWS1.Part_TRAIN";
MPRINT(EM_DIAGRAM):   table="EMWS1.Part_TRAIN";
24363      Nobs=799;
MPRINT(EM_DIAGRAM):   Nobs=799;
24364      output;
MPRINT(EM_DIAGRAM):   output;
24365      type='VALIDATE';
MPRINT(EM_DIAGRAM):   type='VALIDATE';
24366      table="EMWS1.Part_VALIDATE";
MPRINT(EM_DIAGRAM):   table="EMWS1.Part_VALIDATE";
24367      Nobs=600;
MPRINT(EM_DIAGRAM):   Nobs=600;
24368      output;
MPRINT(EM_DIAGRAM):   output;
24369      type='TEST';
MPRINT(EM_DIAGRAM):   type='TEST';
24370      table="EMWS1.Part_TEST";
MPRINT(EM_DIAGRAM):   table="EMWS1.Part_TEST";
24371      Nobs=601;
MPRINT(EM_DIAGRAM):   Nobs=601;
24372      output;
MPRINT(EM_DIAGRAM):   output;
24373      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._TEMPNOBS has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24374      %let _cn = %sysfunc(getoption(CENTER));
24375      %let _nb = %sysfunc(getoption(NUMBER));
24376      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
24377      proc print data=_tempNobs noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_tempNobs noobs label;
24378      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
24379      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_partitionSummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Partition Summary";
MPRINT(EM_DIAGRAM):   run;
24380      run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPNOBS.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
24381      title10;
MPRINT(EM_DIAGRAM):   title10;
24382      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):   run;
24383      run;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20:36:43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                18 March 2021
Time:                20:36:43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1U3A88T "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1U3A88T new;
MPRINT(EM_DIAGRAM):   run;
24485      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24486      * Part: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Part: Computing metadata for TRAIN data;
24487      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Part_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Part_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options fmterr;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
MPRINT(EMADVISECOLUMNS):   set EMWS1.Part_TRAIN;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   stop;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Part_TRAIN out=WORK.M0ONRBOH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ONRBOH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ONRBOH(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ONRBOH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ONRBOH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M345DWR4 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3A42PSR(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   set WORK.M345DWR4;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Part";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = '_DATAOBS_' then ROLE='ID';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20:36:43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                18 March 2021
Time:                20:36:43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0AW1U9J "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS1\Part\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0AW1U9J new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M04HT502;
MPRINT(EM_DIAGRAM):   set WORK.M04HT502;
MPRINT(EM_DIAGRAM):   where(ROLE = "TARGET" or ROLE = "FREQ");
MPRINT(EM_DIAGRAM):   run;
24861      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24862      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
24863      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24864      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
24865      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
24866      proc freq data = EMWS1.Ids_DATA order=formatted addnames;
NOTE: Data file DANE.OSOBY.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Ids_DATA order=formatted addnames;
24867      table komputer / missing;
MPRINT(EM_DIAGRAM):   table komputer / missing;
24868      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2000 observations read from the data set DANE.OSOBY.
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 2000 observations read from the data set EMWS1.IDS_DATA.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24869      quit;
24870      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
24871      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
24872      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
24873         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
24874      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
24875      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
24876      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
24877      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
24878      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
24879      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
24880      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
24881      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
24882      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
24883      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
24884      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
24885      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
24886      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
24887      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
24888      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
24889      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
24890      output;
MPRINT(EM_DIAGRAM):   output;
24891      end;
MPRINT(EM_DIAGRAM):   end;
24892      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
24893      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24894      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
24895      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
24896      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24897      proc sort data=WORK.M04HT502;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04HT502;
24898      by Name;
MPRINT(EM_DIAGRAM):   by Name;
24899      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M04HT502.
NOTE: The data set WORK.M04HT502 has 1 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
24900      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
24901      merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
24902      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
24903      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
24904      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
24905      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
24906      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M04HT502.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
24907      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS1.Part_CLASS;
24908      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
24909      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
24910      DATA = "DATA";
MPRINT(EM_DIAGRAM):   DATA = "DATA";
24911      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24912      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24913      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
24914      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24915      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24916      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
24917      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24918      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
24919      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
24920      proc freq data = EMWS1.Part_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Part_TRAIN order=formatted addnames;
24921      table komputer / missing;
MPRINT(EM_DIAGRAM):   table komputer / missing;
24922      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 799 observations read from the data set EMWS1.PART_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24923      quit;
24924      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
24925      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
24926      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
24927         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
24928      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
24929      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
24930      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
24931      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
24932      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
24933      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
24934      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
24935      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
24936      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
24937      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
24938      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
24939      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
24940      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
24941      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
24942      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
24943      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
24944      output;
MPRINT(EM_DIAGRAM):   output;
24945      end;
MPRINT(EM_DIAGRAM):   end;
24946      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
24947      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
24948      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
24949      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
24950      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24951      proc sort data=WORK.M04HT502;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04HT502;
24952      by Name;
MPRINT(EM_DIAGRAM):   by Name;
24953      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24954      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
24955      merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
24956      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
24957      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
24958      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
24959      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
24960      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M04HT502.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24961      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR;
24962      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
24963      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
24964      DATA = "TRAIN";
MPRINT(EM_DIAGRAM):   DATA = "TRAIN";
24965      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24966      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS;
24967      set EMWS1.Part_CLASS WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS WORK.Part_BAR;
24968      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.PART_CLASS.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
24969      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24970      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
24971      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24972      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24973      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
24974      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24975      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
24976      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
24977      proc freq data = EMWS1.Part_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Part_VALIDATE order=formatted addnames;
24978      table komputer / missing;
MPRINT(EM_DIAGRAM):   table komputer / missing;
24979      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 600 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
24980      quit;
24981      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
24982      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
24983      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
24984         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
24985      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
24986      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
24987      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
24988      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
24989      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
24990      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
24991      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
24992      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
24993      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
24994      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
24995      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
24996      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
24997      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
24998      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
24999      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
25000      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
25001      output;
MPRINT(EM_DIAGRAM):   output;
25002      end;
MPRINT(EM_DIAGRAM):   end;
25003      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
25004      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
25005      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
25006      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
25007      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25008      proc sort data=WORK.M04HT502;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04HT502;
25009      by Name;
MPRINT(EM_DIAGRAM):   by Name;
25010      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25011      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
25012      merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
25013      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
25014      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
25015      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
25016      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
25017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M04HT502.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
25018      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR;
25019      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
25020      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
25021      DATA = "VALIDATE";
MPRINT(EM_DIAGRAM):   DATA = "VALIDATE";
25022      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
25023      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS;
25024      set EMWS1.Part_CLASS WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS WORK.Part_BAR;
25025      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.PART_CLASS.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25026      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
25027      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
25028      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25029      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25030      * Part: Computing statistics for class target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for class target variables;
25031      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25032      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
25033      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
25034      proc freq data = EMWS1.Part_TEST order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.Part_TEST order=formatted addnames;
25035      table komputer / missing;
MPRINT(EM_DIAGRAM):   table komputer / missing;
25036      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.TEMPFREQ has 2 observations and 8 variables.
NOTE: There were 601 observations read from the data set EMWS1.PART_TEST.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
25037      quit;
25038      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
25039      data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
25040      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
25041         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
25042      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
25043      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
25044      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
25045      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
25046      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
25047      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
25048      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
25049      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
25050      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
25051      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
25052      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
25053      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
25054      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
25055      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
25056      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
25057      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
25058      output;
MPRINT(EM_DIAGRAM):   output;
25059      end;
MPRINT(EM_DIAGRAM):   end;
25060      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
25061      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
25062      proc sort data=WORK.Part_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part_BAR NOTHREADS;
25063      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
25064      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
25065      proc sort data=WORK.M04HT502;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04HT502;
25066      by Name;
MPRINT(EM_DIAGRAM):   by Name;
25067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25068      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part_BAR;
25069      merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part_BAR(in=_a) WORK.M04HT502(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
25070      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
25071      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
25072      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "Label";
25073      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
25074      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable Label is uninitialized.
WARNING: Multiple lengths were specified for the BY variable _VARIABLE_ by input data sets. This might cause unexpected results.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: There were 1 observations read from the data set WORK.M04HT502.
NOTE: The data set WORK.PART_BAR has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
25075      data WORK.Part_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part_BAR;
25076      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
25077      set WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part_BAR;
25078      DATA = "TEST";
MPRINT(EM_DIAGRAM):   DATA = "TEST";
25079      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set WORK.PART_BAR has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
25080      data EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS;
25081      set EMWS1.Part_CLASS WORK.Part_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS WORK.Part_BAR;
25082      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.PART_CLASS.
NOTE: There were 2 observations read from the data set WORK.PART_BAR.
NOTE: The data set EMWS1.PART_CLASS has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25083      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
25084      * Part: Computing statistics for interval target variables;
MPRINT(EM_DIAGRAM):   * Part: Computing statistics for interval target variables;
25085      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25086      data EMWS1.Part_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
MPRINT(EM_DIAGRAM):   data EMWS1.Part_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
25087      label DATA = "%sysfunc(sasmsg(sashelp.dmine, rpt_data_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATA = "Data";
25088      set EMWS1.Part_CLASS;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_CLASS;
25089      drop type role;
MPRINT(EM_DIAGRAM):   drop type role;
25090      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.PART_CLASS.
NOTE: The data set EMWS1.PART_CLASS has 8 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25091      proc sort data=EMWS1.Part_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CLASS NOTHREADS;
25092      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
25093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.PART_CLASS.
NOTE: The data set EMWS1.PART_CLASS has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
25094      %let _cn = %sysfunc(getoption(CENTER));
25095      %let _nb = %sysfunc(getoption(NUMBER));
25096      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
25097      proc print data=EMWS1.Part_CLASS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Part_CLASS noobs label;
25098      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
25099      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
25100      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classTargetStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Summary Statistics for Class Targets";
MPRINT(EM_DIAGRAM):   run;
25101      run;
 
NOTE: There were 8 observations read from the data set EMWS1.PART_CLASS.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
25102      title10;
MPRINT(EM_DIAGRAM):   title10;
25103      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
