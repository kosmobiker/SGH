*------------------------------------------------------------*
User:                Vlad
Date:                18 March 2021
Time:                21:35:55
Site:                70115216
Platform:            X64_10PRO
Maintenance Release: 9.04.01M6P111518
EM Version:          15.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:49" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                18 March 2021
Time:                21:35:49
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0RLKOF8 "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0RLKOF8 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:49" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Vlad";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70115216";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M6P111518";
MPRINT(EM_DIAGRAM):   put "EM Version:          15.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:49" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Vlad";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22229      proc freq data=EMWS2.Plot2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Plot2_VariableSet noprint;
22230      table ROLE*LEVEL/out=WORK.Plot2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Plot2META;
22231      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set EMWS2.PLOT2_VARIABLESET.
NOTE: The data set WORK.PLOT2META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
22232      proc print data=WORK.Plot2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Plot2META label noobs;
22233      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22234      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22235      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22236      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22237      run;
 
NOTE: There were 4 observations read from the data set WORK.PLOT2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22238      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M1GJKL5_;
MPRINT(EM_DIAGRAM):   set WORK.M1GJKL5_;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'TARGET';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role in('REJECTED' 'PREDICT' 'RESIDUAL' 'GROUP' 'ASSESS') and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'INPUT' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'FREQ' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'FREQ';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   run;
22259      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22260      * Plot2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBClass Macro ;
22261      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22262      %macro DMDBClass;
22263          CHURN(DESC) DZIENMIN(ASC) DZIENROZ(ASC) L_ROZBOK(ASC) L_WIAD(ASC) M_MIN(ASC)
22264         M_OPL(ASC) M_ROZM(ASC) NOCMIN(ASC) NOCOPL(ASC) NOCROZ(ASC) PLAN_M(ASC)
22265         POCZTA_G(ASC) STD_CZAS_W(ASC) WIECZMIN(ASC) WIECZOPL(ASC) WIECZROZ(ASC)
22266      %mend DMDBClass;
22267      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22268      * Plot2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot2: Create DMDB;
22269      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22270      proc dmdb batch data=EMWS2.Trans_TRAIN
22271      dmdbcat=WORK.Plot2_DMDB
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
22272      maxlevel = 23
22273      nonorm
22274      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Trans_TRAIN dmdbcat=WORK.Plot2_DMDB maxlevel = 23 nonorm ;
MPRINT(EM_DIAGRAM):   class
22275      class %DMDBClass;
MPRINT(DMDBCLASS):   CHURN(DESC) DZIENMIN(ASC) DZIENROZ(ASC) L_ROZBOK(ASC) L_WIAD(ASC) M_MIN(ASC) M_OPL(ASC) M_ROZM(ASC) NOCMIN(ASC) NOCOPL(ASC) NOCROZ(ASC) PLAN_M(ASC) POCZTA_G(ASC) STD_CZAS_W(ASC) WIECZMIN(ASC) WIECZOPL(ASC) WIECZROZ(ASC)
MPRINT(EM_DIAGRAM):  ;
22276      target
22277      CHURN
22278      ;
MPRINT(EM_DIAGRAM):   target CHURN ;
22279      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3333   Memory used = 511K.
NOTE: There were 3333 observations read from the data set DANE.CHURN.
NOTE: There were 3333 observations read from the data set EMWS2.IDS_DATA.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
NOTE: There were 3333 observations read from the data set EMWS2.DROP_TRAIN.
NOTE: There were 3333 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22280      quit;
 
22281      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22282      * Plot2: Creating variable by class target charts;
MPRINT(EM_DIAGRAM):   * Plot2: Creating variable by class target charts;
22283      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22284      goptions ftext="SWISS";
MPRINT(EM_DIAGRAM):   goptions ftext="SWISS";
22285      goptions nodisplay device=PNG;
MPRINT(EM_DIAGRAM):   goptions nodisplay device=PNG;
22286      axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
MPRINT(EM_DIAGRAM):   axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
22287      axis2 width=2 minor=none;
MPRINT(EM_DIAGRAM):   axis2 width=2 minor=none;
22288      pattern1 value=solid;
MPRINT(EM_DIAGRAM):   pattern1 value=solid;
22289      proc gchart
22290      data=EMWS2.Trans_TRAIN gout=WORK.Plot2GRAPH;
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
MPRINT(EM_DIAGRAM):   proc gchart data=EMWS2.Trans_TRAIN gout=WORK.Plot2GRAPH;
22291      *;
MPRINT(EM_DIAGRAM):   *;
22292      title "DZIENMIN by CHURN";
MPRINT(EM_DIAGRAM):   title "DZIENMIN by CHURN";
22293      vbar DZIENMIN /
22294      name = "DZIENMIN       x CHURN          " description = "DZIENMIN by CHURN"
22295      FREQ
MPRINT(EM_DIAGRAM):   vbar DZIENMIN / name = "DZIENMIN       x CHURN          " description = "DZIENMIN by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22296      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22297      subgroup=CHURN
22298      noframe
22299      missing
22300      raxis=axis1 maxis=axis2;
22301      run;
 
NOTE: Graph's name, DZIENMIN, changed to DZIENMIN. DZIENMIN is already used or not a valid SAS name.
22302      title "DZIENROZ by CHURN";
MPRINT(EM_DIAGRAM):   title "DZIENROZ by CHURN";
22303      vbar DZIENROZ /
22304      name = "DZIENROZ       x CHURN          " description = "DZIENROZ by CHURN"
22305      FREQ
MPRINT(EM_DIAGRAM):   vbar DZIENROZ / name = "DZIENROZ       x CHURN          " description = "DZIENROZ by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22306      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22307      subgroup=CHURN
22308      noframe
22309      missing
22310      raxis=axis1 maxis=axis2;
22311      run;
 
NOTE: Graph's name, DZIENROZ, changed to DZIENROZ. DZIENROZ is already used or not a valid SAS name.
22312      title "L_ROZBOK by CHURN";
MPRINT(EM_DIAGRAM):   title "L_ROZBOK by CHURN";
22313      vbar L_ROZBOK /
22314      name = "L_ROZBOK       x CHURN          " description = "L_ROZBOK by CHURN"
22315      FREQ
22316      type=FREQ
MPRINT(EM_DIAGRAM):   vbar L_ROZBOK / name = "L_ROZBOK       x CHURN          " description = "L_ROZBOK by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing discrete raxis=axis1 maxis=axis2;
22317      subgroup=CHURN
MPRINT(EM_DIAGRAM):   run;
22318      noframe
22319      missing
22320      discrete
22321      raxis=axis1 maxis=axis2;
22322      run;
 
NOTE: Graph's name, L_ROZBOK, changed to L_ROZBOK. L_ROZBOK is already used or not a valid SAS name.
22323      title "L_WIAD by CHURN";
MPRINT(EM_DIAGRAM):   title "L_WIAD by CHURN";
22324      vbar L_WIAD /
22325      name = "L_WIAD         x CHURN          " description = "L_WIAD by CHURN"
22326      FREQ
MPRINT(EM_DIAGRAM):   vbar L_WIAD / name = "L_WIAD         x CHURN          " description = "L_WIAD by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22327      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22328      subgroup=CHURN
22329      noframe
22330      missing
22331      raxis=axis1 maxis=axis2;
22332      run;
 
NOTE: Graph's name, L_WIAD, changed to L_WIAD. L_WIAD is already used or not a valid SAS name.
22333      title "M_MIN by CHURN";
MPRINT(EM_DIAGRAM):   title "M_MIN by CHURN";
22334      vbar M_MIN /
22335      name = "M_MIN          x CHURN          " description = "M_MIN by CHURN"
22336      FREQ
MPRINT(EM_DIAGRAM):   vbar M_MIN / name = "M_MIN          x CHURN          " description = "M_MIN by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22337      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22338      subgroup=CHURN
22339      noframe
22340      missing
22341      raxis=axis1 maxis=axis2;
22342      run;
 
NOTE: Graph's name, M_MIN, changed to M_MIN. M_MIN is already used or not a valid SAS name.
22343      title "M_OPL by CHURN";
MPRINT(EM_DIAGRAM):   title "M_OPL by CHURN";
22344      vbar M_OPL /
22345      name = "M_OPL          x CHURN          " description = "M_OPL by CHURN"
22346      FREQ
MPRINT(EM_DIAGRAM):   vbar M_OPL / name = "M_OPL          x CHURN          " description = "M_OPL by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22347      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22348      subgroup=CHURN
22349      noframe
22350      missing
22351      raxis=axis1 maxis=axis2;
22352      run;
 
NOTE: Graph's name, M_OPL, changed to M_OPL. M_OPL is already used or not a valid SAS name.
22353      title "M_ROZM by CHURN";
MPRINT(EM_DIAGRAM):   title "M_ROZM by CHURN";
22354      vbar M_ROZM /
22355      name = "M_ROZM         x CHURN          " description = "M_ROZM by CHURN"
22356      FREQ
MPRINT(EM_DIAGRAM):   vbar M_ROZM / name = "M_ROZM         x CHURN          " description = "M_ROZM by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22357      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22358      subgroup=CHURN
22359      noframe
22360      missing
22361      raxis=axis1 maxis=axis2;
22362      run;
 
NOTE: Graph's name, M_ROZM, changed to M_ROZM. M_ROZM is already used or not a valid SAS name.
22363      title "NOCMIN by CHURN";
MPRINT(EM_DIAGRAM):   title "NOCMIN by CHURN";
22364      vbar NOCMIN /
22365      name = "NOCMIN         x CHURN          " description = "NOCMIN by CHURN"
22366      FREQ
MPRINT(EM_DIAGRAM):   vbar NOCMIN / name = "NOCMIN         x CHURN          " description = "NOCMIN by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22367      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22368      subgroup=CHURN
22369      noframe
22370      missing
22371      raxis=axis1 maxis=axis2;
22372      run;
 
NOTE: Graph's name, NOCMIN, changed to NOCMIN. NOCMIN is already used or not a valid SAS name.
22373      title "NOCOPL by CHURN";
MPRINT(EM_DIAGRAM):   title "NOCOPL by CHURN";
22374      vbar NOCOPL /
22375      name = "NOCOPL         x CHURN          " description = "NOCOPL by CHURN"
22376      FREQ
MPRINT(EM_DIAGRAM):   vbar NOCOPL / name = "NOCOPL         x CHURN          " description = "NOCOPL by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22377      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22378      subgroup=CHURN
22379      noframe
22380      missing
22381      raxis=axis1 maxis=axis2;
22382      run;
 
NOTE: Graph's name, NOCOPL, changed to NOCOPL. NOCOPL is already used or not a valid SAS name.
22383      title "NOCROZ by CHURN";
MPRINT(EM_DIAGRAM):   title "NOCROZ by CHURN";
22384      vbar NOCROZ /
22385      name = "NOCROZ         x CHURN          " description = "NOCROZ by CHURN"
22386      FREQ
MPRINT(EM_DIAGRAM):   vbar NOCROZ / name = "NOCROZ         x CHURN          " description = "NOCROZ by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22387      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22388      subgroup=CHURN
22389      noframe
22390      missing
22391      raxis=axis1 maxis=axis2;
22392      run;
 
NOTE: Graph's name, NOCROZ, changed to NOCROZ. NOCROZ is already used or not a valid SAS name.
22393      title "PLAN_M by CHURN";
MPRINT(EM_DIAGRAM):   title "PLAN_M by CHURN";
22394      vbar PLAN_M /
22395      name = "PLAN_M         x CHURN          " description = "PLAN_M by CHURN"
22396      FREQ
22397      type=FREQ
MPRINT(EM_DIAGRAM):   vbar PLAN_M / name = "PLAN_M         x CHURN          " description = "PLAN_M by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing discrete raxis=axis1 maxis=axis2;
22398      subgroup=CHURN
MPRINT(EM_DIAGRAM):   run;
22399      noframe
22400      missing
22401      discrete
22402      raxis=axis1 maxis=axis2;
22403      run;
 
NOTE: Graph's name, PLAN_M, changed to PLAN_M. PLAN_M is already used or not a valid SAS name.
22404      title "POCZTA_G by CHURN";
MPRINT(EM_DIAGRAM):   title "POCZTA_G by CHURN";
22405      vbar POCZTA_G /
22406      name = "POCZTA_G       x CHURN          " description = "POCZTA_G by CHURN"
22407      FREQ
22408      type=FREQ
MPRINT(EM_DIAGRAM):   vbar POCZTA_G / name = "POCZTA_G       x CHURN          " description = "POCZTA_G by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing discrete raxis=axis1 maxis=axis2;
22409      subgroup=CHURN
MPRINT(EM_DIAGRAM):   run;
22410      noframe
22411      missing
22412      discrete
22413      raxis=axis1 maxis=axis2;
22414      run;
 
NOTE: Graph's name, POCZTA_G, changed to POCZTA_G. POCZTA_G is already used or not a valid SAS name.
22415      title "STD_CZAS_W by CHURN";
MPRINT(EM_DIAGRAM):   title "STD_CZAS_W by CHURN";
22416      vbar STD_CZAS_W /
22417      name = "STD_CZAS_W     x CHURN          " description = "STD_CZAS_W by CHURN"
22418      FREQ
MPRINT(EM_DIAGRAM):   vbar STD_CZAS_W / name = "STD_CZAS_W     x CHURN          " description = "STD_CZAS_W by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22419      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22420      subgroup=CHURN
22421      noframe
22422      missing
22423      raxis=axis1 maxis=axis2;
22424      run;
 
NOTE: Graph's name, STD_CZAS, changed to STD_CZAS. STD_CZAS is already used or not a valid SAS name.
22425      title "WIECZMIN by CHURN";
MPRINT(EM_DIAGRAM):   title "WIECZMIN by CHURN";
22426      vbar WIECZMIN /
22427      name = "WIECZMIN       x CHURN          " description = "WIECZMIN by CHURN"
22428      FREQ
MPRINT(EM_DIAGRAM):   vbar WIECZMIN / name = "WIECZMIN       x CHURN          " description = "WIECZMIN by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22429      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22430      subgroup=CHURN
22431      noframe
22432      missing
22433      raxis=axis1 maxis=axis2;
22434      run;
 
NOTE: Graph's name, WIECZMIN, changed to WIECZMIN. WIECZMIN is already used or not a valid SAS name.
22435      title "WIECZOPL by CHURN";
MPRINT(EM_DIAGRAM):   title "WIECZOPL by CHURN";
22436      vbar WIECZOPL /
22437      name = "WIECZOPL       x CHURN          " description = "WIECZOPL by CHURN"
22438      FREQ
MPRINT(EM_DIAGRAM):   vbar WIECZOPL / name = "WIECZOPL       x CHURN          " description = "WIECZOPL by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22439      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22440      subgroup=CHURN
22441      noframe
22442      missing
22443      raxis=axis1 maxis=axis2;
22444      run;
 
NOTE: Graph's name, WIECZOPL, changed to WIECZOPL. WIECZOPL is already used or not a valid SAS name.
22445      title "WIECZROZ by CHURN";
MPRINT(EM_DIAGRAM):   title "WIECZROZ by CHURN";
22446      vbar WIECZROZ /
22447      name = "WIECZROZ       x CHURN          " description = "WIECZROZ by CHURN"
22448      FREQ
MPRINT(EM_DIAGRAM):   vbar WIECZROZ / name = "WIECZROZ       x CHURN          " description = "WIECZROZ by CHURN" FREQ type=FREQ subgroup=CHURN noframe missing raxis=axis1 maxis=axis2;
22449      type=FREQ
MPRINT(EM_DIAGRAM):   run;
22450      subgroup=CHURN
22451      noframe
22452      missing
22453      raxis=axis1 maxis=axis2;
22454      run;
 
NOTE: Graph's name, WIECZROZ, changed to WIECZROZ. WIECZROZ is already used or not a valid SAS name.
22455      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: There were 3333 observations read from the data set DANE.CHURN.
NOTE: There were 3333 observations read from the data set EMWS2.IDS_DATA.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           1.07 seconds
      cpu time            1.03 seconds
 
NOTE: There were 3333 observations read from the data set EMWS2.DROP_TRAIN.
NOTE: There were 3333 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: PROCEDURE GCHART used (Total process time):
      real time           1.09 seconds
      cpu time            1.03 seconds
 
 
22456      title;
MPRINT(EM_DIAGRAM):   title;
22457      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
22458      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22459      * Plot2: Creating variable by interval target charts;
MPRINT(EM_DIAGRAM):   * Plot2: Creating variable by interval target charts;
22460      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22461      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22462      * Plot2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBClass Macro ;
22463      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22464      %macro DMDBClass;
22465          CHURN(DESC) L_ROZBOK(ASC) PLAN_M(ASC) POCZTA_G(ASC)
22466      %mend DMDBClass;
22467      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22468      * Plot2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Plot2: DMDBVar Macro ;
22469      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22470      %macro DMDBVar;
22471          DZIENMIN DZIENROZ L_WIAD M_MIN M_OPL M_ROZM NOCMIN NOCOPL NOCROZ STD_CZAS_W
22472         WIECZMIN WIECZOPL WIECZROZ
22473      %mend DMDBVar;
22474      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22475      * Plot2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot2: Create DMDB;
22476      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22477      proc dmdb batch data=EMWS2.Trans_TRAIN
22478      dmdbcat=WORK.Plot2_DMDB
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
22479      classout=work.classoutDs
22480      varout=work.varoutDs
22481      maxlevel = 513
22482      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Trans_TRAIN dmdbcat=WORK.Plot2_DMDB classout=work.classoutDs varout=work.varoutDs maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
22483      class %DMDBClass;
MPRINT(DMDBCLASS):   CHURN(DESC) L_ROZBOK(ASC) PLAN_M(ASC) POCZTA_G(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
22484      var %DMDBVar;
MPRINT(DMDBVAR):   DZIENMIN DZIENROZ L_WIAD M_MIN M_OPL M_ROZM NOCMIN NOCOPL NOCROZ STD_CZAS_W WIECZMIN WIECZOPL WIECZROZ
MPRINT(EM_DIAGRAM):  ;
22485      target
22486      CHURN
22487      ;
MPRINT(EM_DIAGRAM):   target CHURN ;
22488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 3333   Memory used = 511K.
NOTE: There were 3333 observations read from the data set DANE.CHURN.
NOTE: There were 3333 observations read from the data set EMWS2.IDS_DATA.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
NOTE: There were 3333 observations read from the data set EMWS2.DROP_TRAIN.
NOTE: There were 3333 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: The data set WORK.CLASSOUTDS has 18 observations and 9 variables.
NOTE: The data set WORK.VAROUTDS has 13 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.16 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
22489      quit;
22490      *--- end code ---*;
 
22491      title8;
MPRINT(EM_DIAGRAM):    title8;
22492      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_classvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Class Variables";
22493      proc print data=work.classoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.classoutDs;
22494      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.CLASSOUTDS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22495      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
22496      delete classoutDs;
MPRINT(EM_DIAGRAM):   delete classoutDs;
22497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.CLASSOUTDS (memtype=DATA).
22498      title8;
MPRINT(EM_DIAGRAM):   title8;
22499      title8;
MPRINT(EM_DIAGRAM):   title8;
22500      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_intvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Interval Variables";
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22501      proc print data=work.varoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.varoutDs;
22502      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.VAROUTDS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22503      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
22504      delete varoutDs;
MPRINT(EM_DIAGRAM):   delete varoutDs;
22505      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.VAROUTDS (memtype=DATA).
22506      title8;
MPRINT(EM_DIAGRAM):   title8;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22507      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=WORK nolist;
22508      delete Plot2_DMDB;
MPRINT(EM_DIAGRAM):   delete Plot2_DMDB;
22509      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.PLOT2_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
22510      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22511      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
22512      delete Plot2_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Plot2_DMDB / memtype=catalog;
22513      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.PLOT2_DMDB (memtype=CATALOG).
22514      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22515      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22516      * Plot2: Copying graphs to node folder;
MPRINT(EM_DIAGRAM):   * Plot2: Copying graphs to node folder;
22517      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22518      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENMIN by CHURN.png";
MPRINT(EM_DIAGRAM):   filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENMIN by CHURN.png";
22519      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22520      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22521      replay DZIENMIN;
MPRINT(EM_DIAGRAM):   replay DZIENMIN;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
NOTE: 8261 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENMIN by CHURN.png.
22522      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
22523      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22524      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22525      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENROZ by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENROZ by CHURN.png";
22526      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22527      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22528      replay DZIENROZ;
MPRINT(EM_DIAGRAM):   replay DZIENROZ;
NOTE: 7879 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\DZIENROZ by CHURN.png.
22529      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
22530      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22531      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22532      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_ROZBOK by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_ROZBOK by CHURN.png";
22533      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22534      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22535      replay L_ROZBOK;
MPRINT(EM_DIAGRAM):   replay L_ROZBOK;
NOTE: 7266 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_ROZBOK by CHURN.png.
22536      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
22537      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22538      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22539      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_WIAD by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_WIAD by CHURN.png";
22540      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22541      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22542      replay L_WIAD;
MPRINT(EM_DIAGRAM):   replay L_WIAD;
NOTE: 7145 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\L_WIAD by CHURN.png.
22543      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
22544      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22545      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22546      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_MIN by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_MIN by CHURN.png";
22547      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22548      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22549      replay M_MIN;
MPRINT(EM_DIAGRAM):   replay M_MIN;
NOTE: 7650 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_MIN by CHURN.png.
22550      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
22551      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22552      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22553      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_OPL by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_OPL by CHURN.png";
22554      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22555      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22556      replay M_OPL;
MPRINT(EM_DIAGRAM):   replay M_OPL;
NOTE: 8151 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_OPL by CHURN.png.
22557      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
22558      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22559      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22560      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_ROZM by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_ROZM by CHURN.png";
22561      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22562      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22563      replay M_ROZM;
MPRINT(EM_DIAGRAM):   replay M_ROZM;
NOTE: 7727 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\M_ROZM by CHURN.png.
22564      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
22565      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22566      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22567      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCMIN by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCMIN by CHURN.png";
22568      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22569      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22570      replay NOCMIN;
MPRINT(EM_DIAGRAM):   replay NOCMIN;
NOTE: 8433 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCMIN by CHURN.png.
22571      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22572      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22573      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22574      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCOPL by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCOPL by CHURN.png";
22575      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22576      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22577      replay NOCOPL;
MPRINT(EM_DIAGRAM):   replay NOCOPL;
NOTE: 8006 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCOPL by CHURN.png.
22578      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22579      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22580      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22581      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCROZ by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCROZ by CHURN.png";
22582      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22583      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22584      replay NOCROZ;
MPRINT(EM_DIAGRAM):   replay NOCROZ;
NOTE: 8143 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\NOCROZ by CHURN.png.
22585      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
22586      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22587      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22588      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\PLAN_M by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\PLAN_M by CHURN.png";
22589      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22590      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22591      replay PLAN_M;
MPRINT(EM_DIAGRAM):   replay PLAN_M;
NOTE: 5587 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\PLAN_M by CHURN.png.
22592      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
22593      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22594      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22595      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\POCZTA_G by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\POCZTA_G by CHURN.png";
22596      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22597      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22598      replay POCZTA_G;
MPRINT(EM_DIAGRAM):   replay POCZTA_G;
NOTE: 5537 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\POCZTA_G by CHURN.png.
22599      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22600      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22601      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22602      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\STD_CZAS_W by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\STD_CZAS_W by CHURN.png";
22603      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22604      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22605      replay STD_CZAS;
MPRINT(EM_DIAGRAM):   replay STD_CZAS;
NOTE: 8215 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\STD_CZAS_W by CHURN.png.
22606      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22607      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22608      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22609      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZMIN by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZMIN by CHURN.png";
22610      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22611      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22612      replay WIECZMIN;
MPRINT(EM_DIAGRAM):   replay WIECZMIN;
NOTE: 8382 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZMIN by CHURN.png.
22613      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22614      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22615      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22616      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZOPL by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZOPL by CHURN.png";
22617      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22618      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22619      replay WIECZOPL;
MPRINT(EM_DIAGRAM):   replay WIECZOPL;
NOTE: 8086 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZOPL by CHURN.png.
22620      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22621      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22622      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
22623      filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZROZ by CHURN.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZROZ by CHURN.png";
22624      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
22625      proc greplay igout=WORK.PLOT2GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT2GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
22626      replay WIECZROZ;
MPRINT(EM_DIAGRAM):   replay WIECZROZ;
NOTE: 7937 bytes written to C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\GRAPH\WIECZROZ by CHURN.png.
22627      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
22628      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
22629      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:54" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                18 March 2021
Time:                21:35:54
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3V7KDGM "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3V7KDGM new;
MPRINT(EM_DIAGRAM):   run;
22731      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22732      * Plot2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Plot2: Scoring DATA data;
22733      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22734      data EMWS2.Plot2_TRAIN
22735      / view=EMWS2.Plot2_TRAIN
22736      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Plot2_TRAIN / view=EMWS2.Plot2_TRAIN ;
22737      set EMWS2.Trans_TRAIN
22738      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN ;
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
22739      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.PLOT2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22740      quit;
 
22741      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22742      * Plot2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Plot2: Computing metadata for TRAIN data;
22743      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
NOTE: View EMWS2.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.17 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Plot2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Plot2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Plot2_TRAIN out=WORK.M3345T10 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3345T10;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3345T10(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3345T10;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3345T10;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M30RBYDV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SVFSEZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   set WORK.M30RBYDV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Plot2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Plot2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Plot2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: Data file DANE.CHURN.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce performance.
NOTE: View EMWS2.PLOT2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "18 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:55" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                18 March 2021
Time:                21:35:55
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3FHHOQS "C:\Users\Vlad\Documents\SGH\Data_Mining\DM\Workspaces\EMWS2\Plot2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3FHHOQS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
